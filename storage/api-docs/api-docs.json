{
    "openapi": "3.0.0",
    "info": {
        "title": "Simple Todo Rest API",
        "description": "An API for managing user's todos",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "Simple Todo Rest API"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account with the provided details.",
                "operationId": "08136088c4862c313b35d6518bab8d3a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Form validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "fail"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "form validation error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": [
                                                            "The password field confirmation does not match.",
                                                            "The password field must be at least 8 characters."
                                                        ]
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Login a existent user",
                "description": "Login a existent user account with the provided credentials.",
                "operationId": "99d66635c4992aeaa6aa44ff653d0563",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|mY3jSgSPNSCdPoeds7xydX1UyblNXYqh22wpjW8o2814f842"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedResponse"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "Get logged in user details",
                "description": "Logs out the currently authenticated user.",
                "operationId": "7edae2cdbaafc10dff8c9c4198b320a2",
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "1|mY3jSgSPNSCdPoeds7xydX1UyblNXYqh22wpjW8o2814f842"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedResponse"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/logout": {
            "delete": {
                "tags": [
                    "auth"
                ],
                "summary": "Logout a user",
                "description": "Logs out the currently authenticated user.",
                "operationId": "1f2ab4eff9a5fa8cd68553e1234263e7",
                "responses": {
                    "204": {
                        "description": "No content"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/todos": {
            "get": {
                "tags": [
                    "todos"
                ],
                "summary": "Returns a todo list",
                "description": "Returns all todos from logged user.",
                "operationId": "18e676fc7a1838c48c63274e52066ac8",
                "responses": {
                    "200": {
                        "description": "Todo listed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "todos": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Todo"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedResponse"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "todos"
                ],
                "summary": "Create a new todo",
                "description": "Creates a todo with the provided details.",
                "operationId": "ae1281faa0d4aef5c4f3e277c6a57e7c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "do something tomorrow at 10"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "remember to do something tomorrow at 10 am"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Todo created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "todo": {
                                                    "$ref": "#/components/schemas/Todo"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Form validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "fail"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "form validation error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The title field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedResponse"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "todos"
                ],
                "summary": "Delete todo",
                "description": "Delete a todo given an id.",
                "operationId": "f04b5ef77dceb0f0914949f70b525df2",
                "responses": {
                    "204": {
                        "description": "No content"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/todos/{id}": {
            "get": {
                "tags": [
                    "todos"
                ],
                "summary": "Get a todo by id",
                "description": "Get a existing todo by integer id.",
                "operationId": "1b99eaebc4bafa42301fbf780b77da93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the todo item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Todo returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "todo": {
                                                    "$ref": "#/components/schemas/Todo"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/schemas/NotFoundResponse"
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedResponse"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/todos/{id}/done": {
            "put": {
                "tags": [
                    "todos"
                ],
                "summary": "Mark todo as done",
                "description": "Mark a existing todo as done.",
                "operationId": "1f6d8dec15c669d729044c4715699ff6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the todo item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/SuccessEmptyResponse"
                    },
                    "404": {
                        "$ref": "#/components/schemas/NotFoundResponse"
                    },
                    "401": {
                        "$ref": "#/components/schemas/UnauthorizedResponse"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/todos/{id}/undone": {
            "put": {
                "tags": [
                    "todos"
                ],
                "summary": "Mark todo as undone",
                "description": "Mark a existing todo as undone.",
                "operationId": "ff09953bf5510516eda5881ed79abcc8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the todo item",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/schemas/SuccessEmptyResponse"
                    },
                    "404": {
                        "$ref": "#/components/schemas/NotFoundResponse"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessEmptyResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    }
                },
                "type": "object"
            },
            "UnauthorizedResponse": {
                "description": "Unauthorized error",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "fail"
                    },
                    "message": {
                        "type": "string",
                        "example": "unauthorized error"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    }
                },
                "type": "object"
            },
            "NotFoundResponse": {
                "description": "Not found error",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "fail"
                    },
                    "message": {
                        "type": "string",
                        "example": "not found error"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": []
                    }
                },
                "type": "object"
            },
            "Todo": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "do something tomorrow at 10"
                    },
                    "description": {
                        "type": "string",
                        "example": "remember to do something tomorrow at 10 am"
                    },
                    "done": {
                        "type": "boolean",
                        "example": false
                    },
                    "done_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-07-13T02:01:20.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-07-13T02:01:20.000000Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-07-13T02:01:20.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-07-13T02:01:20.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "auth",
            "description": "auth"
        },
        {
            "name": "todos",
            "description": "todos"
        }
    ]
}